import styles from "./index.module.css";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";
import { createStyles, Button, Group, Text, Title } from "@mantine/core";
import logo from "../../public/oedmjuk_logo.svg";
import Image from "next/image";

const useStyles = createStyles((theme) => ({
  main: {
    minHeight: '100vh',
    background: theme.fn.linearGradient(180, theme.colors.earth[6], theme.colors.earth[9]),
  },
  greenSpan: {
    color: theme.colors.earth[9],
    fontWeight: 800,
    display: 'inline-block',
    fontSize: '5.5rem',
    verticalAlign: 'middle',
    lineHeight: 1,
    paddingBottom: '0.5rem',
  },
  authContainer: {
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    background:  theme.fn.rgba(theme.white, 0.1),
    width: '42rem',
    padding: '1rem',
    borderRadius: theme.radius.md,
  },
  cardTitle: {
    fontSize: theme.fontSizes.lg,
    fontWeight: 500,
    marginBottom: theme.spacing.xs,
    marginTop: theme.spacing.xs,
    padding: 0,
  },
  areaTitle: {
    fontSize: theme.fontSizes.md,
    marginBottom: theme.spacing.lg,
    color: theme.white,
  },
  logoWrapper: {
    backgroundColor: theme.colors.earth[9],
    padding: theme.spacing.xs,
    borderRadius: theme.radius.md,
    display: 'inline-block',
    marginRight: theme.spacing.sm,
    
  },
  logoTitle: {
    padding: 0,
    margin: 0,
  }
  


  /*.card {
  max-width: 20rem;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding: 1rem;
  border-radius: 0.75rem;
  color: white;
  background-color: rgb(255 255 255 / 0.1);
}*/
}));

const Home: NextPage = () => {

  const {classes}= useStyles();
  
  return (
    <>
      <Head>
        <title>Oedmjuk</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={classes.main}>
        <div className={styles.container}>
       
          <h1 className={styles.logoTitle}>
          <div className={classes.logoWrapper}>
            
            <Image
        priority
        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
        src={logo}
        alt="Oedmjuk"
        height={60}
      /></div>
              <div className={classes.greenSpan}>OEDMJUK</div> 
          </h1>
          <div className={styles.cardRow}>
            <div
              className={styles.card}
            >
              <h3 className={classes.cardTitle}>Collective decision making</h3>
              <Text fz="md" fw={300}>
                Makes it easy to make great decisions together. Workflows and tools for
                proposals and selections that are easy to use and understand.
              </Text>
            </div>
            <div
              className={styles.card}
            >
              <h3 className={classes.cardTitle}>Inclusive calendar</h3>
              <Text fz="md" fw={300}>
                Joining a group generates a calendar that shows all important dates.
                Set the agenda by connecting proposals, selections and more.
              </Text>
            </div>
            <div
              className={styles.card}
            >
              <h3 className={classes.cardTitle}>Focused information</h3>
              <Text fz="md" fw={300}>
                All information that the group needs to make great decisions gathered in one place. 
              </Text>
            </div>
            <div
              className={styles.card}
            >
              <h3 className={classes.cardTitle}>Feedback and audits included</h3>
              <Text fz="md" fw={300}>
                Create a feedback round for each decision to get better for every decision.
                Everything is recorded and makes it easy to audit the decisions.
              </Text>
            </div>
          </div>
          <div className={styles.showcaseContainer}>

            <AuthShowcase />
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();
  const {classes}= useStyles();

  return (
    <div className={classes.authContainer}>
      <Title order={2} className={classes.areaTitle}>

        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        
        </Title>
      <Group>
      <Button
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </Button>
      {sessionData && <Link href="/app" passHref>
      <Button component="a">Go to app</Button>
    </Link>}
      </Group>
    </div>
  );
};
